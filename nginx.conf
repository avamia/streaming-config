user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
	worker_connections 1024;
}

rtmp {
	access_log /var/log/nginx/rtmp_access.log;
	
	server {
		listen 1935;
		chunk_size 4096;
		notify_method get;

		application live {
			live on;
			record off;
			meta copy;
			publish_notify on;

			# Authentication for stream key
			on_publish http://localhost:{PORT}/auth_publish;

			# Push to HLS app
			push rtmp://localhost/hls;

			# Push to other sources
			push rtmp://localhost/twitch;
			push rtmp://localhost/youtube;
			push rtmp://localhost/facebook;
		}

		application hls {
			live on;
			record off;
			meta copy;

			allow publish 127.0.0.1;
			deny publish all;
			deny play all;

			hls on;
			hls_path /var/www/hls;
			hls_fragment 2s;
			hls_playlist_length 60;
		}

		application twitch {
			live on;
			record off;
			meta copy;

			allow publish 127.0.0.1;
			deny publish all;

			push rtmp://live.twitch.tv/app/{TWITCH_STREAM_KEY};
		}

		application youtube {
			live on;
			record off;
			meta copy;

			allow publish 127.0.0.1;
			deny publish all;

			push rtmp://a.rtmp.youtube.com/live2/{YOUTUBE_STREAM_KEY};
		}

		application facebook {
			live on;
			record off;
			meta copy;
			
			allow publish 127.0.0.1;
			deny publish all;

			push rtmp://127.0.0.1:19350/rtmp/{FACEBOOK_STREAM_KEY};
		}
	}
}

http {
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	include /etc/nginx/mime.types;

	server {
	 	listen {PORT};

	 	allow 127.0.0.1;
	 	deny all;

	 	location /auth_publish {
	    	if ($arg_streamkey = 'SECRET_STREAM_KEY') {
	        	return 200;
	    	}

	    	return 404;
		}
	}

	server {
		listen 80;
		listen [::]:80;
		server_name example.com;

		location / {
		    root   /var/www/html;
		    index  index.html index.htm;
		}

		location /hls {
		    # Serve HLS fragments
		    types {
		        application/vnd.apple.mpegurl m3u8;
		        video/mp2t ts;
		    }

		    root /var/www;
		    add_header Cache-Control no-cache;

		    # CORS setup
		    add_header 'Access-Control-Allow-Origin' '*' always;
		    add_header 'Access-Control-Expose-Headers' 'Content-Length';

		    # Allow CORS preflight requests
		    if ($request_method = 'OPTIONS') {
		        add_header 'Access-Control-Allow-Origin' '*';
		        add_header 'Access-Control-Max-Age' 1728000;
		        add_header 'Content-Type' 'text/plain charset=UTF-8';
		        add_header 'Content-Length' 0;
		        return 204;
		    }
		}
	}
}
